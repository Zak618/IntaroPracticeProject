[2023-07-02T14:48:07.926877+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at /Users/rolan/Desktop/IntaroPractice/my_project_name/vendor/symfony/error-handler/DebugClassLoader.php:335)"} []
[2023-07-02T14:48:33.671198+00:00] php.DEBUG: Warning: file(/proc/mounts): Failed to open stream: No such file or directory {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/Users/rolan/Desktop/IntaroPractice/my_project_name/vendor/symfony/framework-bundle/Command/CacheClearCommand.php","line":209,"trace":[{"file":"/Users/rolan/Desktop/IntaroPractice/my_project_name/vendor/symfony/framework-bundle/Command/CacheClearCommand.php","line":162,"function":"isNfs","class":"Symfony\\Bundle\\FrameworkBundle\\Command\\CacheClearCommand","type":"->"}],"count":1}}} []
[2023-07-02T14:48:40.060090+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://127.0.0.1:8000/"" at /Users/rolan/Desktop/IntaroPractice/my_project_name/vendor/symfony/http-kernel/EventListener/RouterListener.php line 128 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://127.0.0.1:8000/\" at /Users/rolan/Desktop/IntaroPractice/my_project_name/vendor/symfony/http-kernel/EventListener/RouterListener.php:128)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /Users/rolan/Desktop/IntaroPractice/my_project_name/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:185)"} []
[2023-07-02T14:48:40.161555+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e6f640"},"request_uri":"http://127.0.0.1:8000/_wdt/e6f640","method":"GET"} []
[2023-07-02T14:48:40.332984+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e6f640"},"request_uri":"http://127.0.0.1:8000/_wdt/e6f640","method":"GET"} []
[2023-07-03T18:15:52.140839+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\OpenServer\\domains\\IntaroPracticeProject\\vendor\\symfony\\error-handler\\DebugClassLoader.php:335)"} []
[2023-07-03T18:15:53.236118+00:00] php.DEBUG: Warning: filemtime(): stat failed for /Users/rolan/Desktop/IntaroPractice/my_project_name/config/routes/framework.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"C:\\OpenServer\\domains\\IntaroPracticeProject\\vendor\\symfony\\config\\Resource\\FileResource.php","line":61,"trace":[{"file":"C:\\OpenServer\\domains\\IntaroPracticeProject\\vendor\\symfony\\config\\Resource\\SelfCheckingResourceChecker.php","line":44,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2023-07-03T18:57:37.189232+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\OpenServer\\domains\\IntaroPracticeProject\\vendor\\symfony\\error-handler\\DebugClassLoader.php:335)"} []
[2023-07-03T18:57:37.198131+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8"}} []
[2023-07-03T18:57:39.243119+00:00] console.DEBUG: Command "doctrine:database:create" exited with code "1" {"command":"doctrine:database:create","code":1} []
[2023-07-03T18:58:09.856485+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8"}} []
[2023-07-03T18:58:09.888698+00:00] console.DEBUG: Command "doctrine:database:create" exited with code "1" {"command":"doctrine:database:create","code":1} []
[2023-07-03T18:58:12.537880+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8"}} []
[2023-07-03T18:58:12.567098+00:00] console.DEBUG: Command "doctrine:database:create" exited with code "1" {"command":"doctrine:database:create","code":1} []
[2023-07-03T19:00:47.357500+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8"}} []
[2023-07-03T19:00:47.402448+00:00] doctrine.DEBUG: Executing statement: CREATE DATABASE "store" {"sql":"CREATE DATABASE \"store\""} []
[2023-07-03T19:00:47.922755+00:00] doctrine.INFO: Disconnecting [] []
[2023-07-03T19:09:16.660960+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\OpenServer\\domains\\IntaroPracticeProject\\vendor\\symfony\\error-handler\\DebugClassLoader.php:335)"} []
[2023-07-03T19:11:01.556429+00:00] deprecation.INFO: User Deprecated: The "Monolog\Logger" class is considered final. It may change without further notice as of its next major version. You should not extend it from "Symfony\Bridge\Monolog\Logger". {"exception":"[object] (ErrorException(code: 0): User Deprecated: The \"Monolog\\Logger\" class is considered final. It may change without further notice as of its next major version. You should not extend it from \"Symfony\\Bridge\\Monolog\\Logger\". at C:\\OpenServer\\domains\\IntaroPracticeProject\\vendor\\symfony\\error-handler\\DebugClassLoader.php:335)"} []
[2023-07-03T19:14:52.935106+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"store","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"store","serverVersion":"15","charset":"utf8"}} []
[2023-07-03T19:14:52.969250+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-07-03T19:14:52.979114+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"store"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\r\n       table_schema AS schema_name\r\nFROM information_schema.tables\r\nWHERE table_catalog = ?\r\n  AND table_schema NOT LIKE 'pg\\_%'\r\n  AND table_schema != 'information_schema'\r\n  AND table_name != 'geometry_columns'\r\n  AND table_name != 'spatial_ref_sys'\r\n  AND table_type = 'BASE TABLE'","params":{"1":"store"},"types":{"1":2}} []
[2023-07-03T19:14:52.990501+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-07-03T19:14:52.990899+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"store"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\r\n       table_schema AS schema_name\r\nFROM information_schema.tables\r\nWHERE table_catalog = ?\r\n  AND table_schema NOT LIKE 'pg\\_%'\r\n  AND table_schema != 'information_schema'\r\n  AND table_name != 'geometry_columns'\r\n  AND table_name != 'spatial_ref_sys'\r\n  AND table_type = 'BASE TABLE'","params":{"1":"store"},"types":{"1":2}} []
[2023-07-03T19:14:52.993465+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\r\n                FROM   information_schema.schemata\r\n                WHERE  schema_name NOT LIKE 'pg\\_%'\r\n                AND    schema_name != 'information_schema'"} []
[2023-07-03T19:14:52.994229+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-07-03T19:14:52.994523+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'store'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\r\n                       sequence_schema AS schemaname,\r\n                       minimum_value AS min_value,\r\n                       increment AS increment_by\r\n                FROM   information_schema.sequences\r\n                WHERE  sequence_catalog = 'store'\r\n                AND    sequence_schema NOT LIKE 'pg\\_%'\r\n                AND    sequence_schema != 'information_schema'"} []
[2023-07-03T19:14:52.996384+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-07-03T19:14:52.996783+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (SELECT pg_get_expr(adbin, adrelid)              FROM pg_attrdef              WHERE c.oid = pg_attrdef.adrelid                 AND pg_attrdef.adnum=a.attnum             ) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\r\n            quote_ident(a.attname) AS field,\r\n            t.typname AS type,\r\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\r\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\r\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\r\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\r\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\r\n            a.attnotnull AS isnotnull,\r\n            (SELECT 't'\r\n             FROM pg_index\r\n             WHERE c.oid = pg_index.indrelid\r\n                AND pg_index.indkey[0] = a.attnum\r\n                AND pg_index.indisprimary = 't'\r\n            ) AS pri,\r\n            (SELECT pg_get_expr(adbin, adrelid)\r\n             FROM pg_attrdef\r\n             WHERE c.oid = pg_attrdef.adrelid\r\n                AND pg_attrdef.adnum=a.attnum\r\n            ) AS default,\r\n            (SELECT pg_description.description\r\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\r\n            ) AS comment\r\n            FROM pg_attribute a\r\n                INNER JOIN pg_class c\r\n                    ON c.oid = a.attrelid\r\n                INNER JOIN pg_type t\r\n                    ON t.oid = a.atttypid\r\n                INNER JOIN pg_namespace n\r\n                    ON n.oid = c.relnamespace\r\n                LEFT JOIN pg_depend d\r\n                    ON d.objid = c.oid\r\n                        AND d.deptype = 'e'\r\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2023-07-03T19:14:53.001906+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\r\n                   i.indisunique,\r\n                   i.indisprimary,\r\n                   i.indkey,\r\n                   i.indrelid,\r\n                   pg_get_expr(indpred, indrelid) AS \"where\"\r\n              FROM pg_index i\r\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\r\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\r\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\r\n             WHERE ic.oid IN (\r\n                SELECT indexrelid\r\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2023-07-03T19:14:53.003438+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\r\n                  pg_get_constraintdef(r.oid, true) as condef\r\n                  FROM pg_constraint r\r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\r\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\r\n                  WHERE r.conrelid IN\r\n                  (\r\n                      SELECT c.oid\r\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2023-07-03T19:14:53.005104+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\r\n       obj_description(c.oid, 'pg_class') AS comment\r\nFROM pg_class c\r\n     INNER JOIN pg_namespace n\r\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2023-07-03T19:14:53.007177+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-07-03T19:14:53.023685+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2023-07-03T19:14:53.038870+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-07-03T19:14:53.039401+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-07-03T19:14:53.039642+00:00] doctrine.INFO: Disconnecting [] []
[2023-07-03T19:15:01.322439+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"store","serverVersion":"15","charset":"utf8"} {"params":{"driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"store","serverVersion":"15","charset":"utf8"}} []
[2023-07-03T19:15:01.352765+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-07-03T19:15:06.020010+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2023-07-03T19:15:06.022144+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"store"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\r\n       table_schema AS schema_name\r\nFROM information_schema.tables\r\nWHERE table_catalog = ?\r\n  AND table_schema NOT LIKE 'pg\\_%'\r\n  AND table_schema != 'information_schema'\r\n  AND table_name != 'geometry_columns'\r\n  AND table_name != 'spatial_ref_sys'\r\n  AND table_type = 'BASE TABLE'","params":{"1":"store"},"types":{"1":2}} []
[2023-07-03T19:15:06.039444+00:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2023-07-03T19:15:06.059609+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-07-03T19:15:06.060569+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-07-03T19:15:06.061040+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2023-07-03T19:15:06.065463+00:00] doctrine.DEBUG: Beginning transaction [] []
[2023-07-03T19:15:06.068401+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE basket_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE basket_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-07-03T19:15:06.070687+00:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE client_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE client_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2023-07-03T19:15:06.071887+00:00] doctrine.DEBUG: Executing query: CREATE TABLE basket (id INT NOT NULL, id_client_id INT DEFAULT NULL, product JSON DEFAULT NULL, discount INT DEFAULT NULL, count_of_products INT DEFAULT NULL, price NUMERIC(12, 2) DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE basket (id INT NOT NULL, id_client_id INT DEFAULT NULL, product JSON DEFAULT NULL, discount INT DEFAULT NULL, count_of_products INT DEFAULT NULL, price NUMERIC(12, 2) DEFAULT NULL, PRIMARY KEY(id))"} []
[2023-07-03T19:15:06.076658+00:00] doctrine.DEBUG: Executing query: CREATE UNIQUE INDEX UNIQ_2246507B99DED506 ON basket (id_client_id) {"sql":"CREATE UNIQUE INDEX UNIQ_2246507B99DED506 ON basket (id_client_id)"} []
[2023-07-03T19:15:06.078810+00:00] doctrine.DEBUG: Executing query: CREATE TABLE client (id INT NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE client (id INT NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2023-07-03T19:15:06.082739+00:00] doctrine.DEBUG: Executing query: CREATE UNIQUE INDEX UNIQ_C7440455E7927C74 ON client (email) {"sql":"CREATE UNIQUE INDEX UNIQ_C7440455E7927C74 ON client (email)"} []
[2023-07-03T19:15:06.084729+00:00] doctrine.DEBUG: Executing query: CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2023-07-03T19:15:06.089912+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2023-07-03T19:15:06.092062+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2023-07-03T19:15:06.093817+00:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2023-07-03T19:15:06.095627+00:00] doctrine.DEBUG: Executing query: CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$             BEGIN                 PERFORM pg_notify('messenger_messages', NEW.queue_name::text);                 RETURN NEW;             END;         $$ LANGUAGE plpgsql; {"sql":"CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\r\n            BEGIN\r\n                PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\r\n                RETURN NEW;\r\n            END;\r\n        $$ LANGUAGE plpgsql;"} []
[2023-07-03T19:15:06.107187+00:00] doctrine.DEBUG: Executing query: DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2023-07-03T19:15:06.108185+00:00] doctrine.DEBUG: Executing query: CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2023-07-03T19:15:06.109483+00:00] doctrine.DEBUG: Executing query: ALTER TABLE basket ADD CONSTRAINT FK_2246507B99DED506 FOREIGN KEY (id_client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE basket ADD CONSTRAINT FK_2246507B99DED506 FOREIGN KEY (id_client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2023-07-03T19:15:06.111475+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20230703191452","2":"2023-07-03 19:15:06","3":45}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20230703191452","2":"2023-07-03 19:15:06","3":45},"types":{"1":2,"2":2,"3":1}} []
[2023-07-03T19:15:06.113159+00:00] doctrine.DEBUG: Committing transaction [] []
[2023-07-03T19:15:06.120304+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-07-03T19:15:06.121036+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2023-07-03T19:15:06.121245+00:00] doctrine.INFO: Disconnecting [] []
